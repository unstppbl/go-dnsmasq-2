#!/bin/bash
set -e

if [ -z "$GITHUB_TOKEN" ]; then
    echo "GITHUB_TOKEN must be set for github-release"
    exit 1
fi

VERSION=$(cat VERSION)

echo "making release version $VERSION"

git checkout master

git tag -f $VERSION
git push -f --tags

git checkout minimal

git tag -f $VERSION
git push -f --tags

git checkout master

scripts/build $VERSION
scripts/build-min $VERSION

# UPX compression
echo "Packing binaries with UPX..."
for BINARY in go-dnsmasq*_linux*; do
    docker run --rm -v `pwd`:/go/src/github.com/janeczku/go-dnsmasq \
        go-dnsmasq-build goupx $BINARY
done

for BINARY in go-dnsmasq*_darwin*; do
    docker run --rm -v `pwd`:/go/src/github.com/janeczku/go-dnsmasq \
        go-dnsmasq-build upx $BINARY
done
echo "Generating file hashs..."
docker run --rm -v `pwd`:/go/src/github.com/janeczku/go-dnsmasq go-dnsmasq-build ./scripts/generate-sums
echo "Uploading release..."
docker run --rm -e GITHUB_TOKEN go-dnsmasq-build github-release release \
    --user janeczku \
    --repo go-dnsmasq \
    --tag $VERSION \
    --name $VERSION \
    --description "" \
    --pre-release
for BINARY in go-dnsmasq*_*; do
    docker run --rm -e GITHUB_TOKEN -v `pwd`:/go/src/github.com/janeczku/go-dnsmasq \
        go-dnsmasq-build github-release upload \
        --user janeczku \
        --repo go-dnsmasq \
        --tag $VERSION \
        --name $BINARY \
        --file $BINARY
done

# cleanup
rm -f go-dnsmasq*_*
